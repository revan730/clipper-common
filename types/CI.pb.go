// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CI.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Build struct {
	ID                   int64                `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	GithubRepoID         int64                `protobuf:"varint,2,opt,name=GithubRepoID,proto3" json:"GithubRepoID,omitempty"`
	IsSuccessfull        bool                 `protobuf:"varint,3,opt,name=IsSuccessfull,proto3" json:"IsSuccessfull,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Date,proto3" json:"Date,omitempty"`
	Branch               string               `protobuf:"bytes,5,opt,name=Branch,proto3" json:"Branch,omitempty"`
	Stdout               string               `protobuf:"bytes,6,opt,name=Stdout,proto3" json:"Stdout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Build) Reset()         { *m = Build{} }
func (m *Build) String() string { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()    {}
func (*Build) Descriptor() ([]byte, []int) {
	return fileDescriptor_CI_277d7614fec0f21c, []int{0}
}
func (m *Build) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Build.Unmarshal(m, b)
}
func (m *Build) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Build.Marshal(b, m, deterministic)
}
func (dst *Build) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Build.Merge(dst, src)
}
func (m *Build) XXX_Size() int {
	return xxx_messageInfo_Build.Size(m)
}
func (m *Build) XXX_DiscardUnknown() {
	xxx_messageInfo_Build.DiscardUnknown(m)
}

var xxx_messageInfo_Build proto.InternalMessageInfo

func (m *Build) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Build) GetGithubRepoID() int64 {
	if m != nil {
		return m.GithubRepoID
	}
	return 0
}

func (m *Build) GetIsSuccessfull() bool {
	if m != nil {
		return m.IsSuccessfull
	}
	return false
}

func (m *Build) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Build) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *Build) GetStdout() string {
	if m != nil {
		return m.Stdout
	}
	return ""
}

type BuildArtifact struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	BuildID              int64    `protobuf:"varint,2,opt,name=BuildID,proto3" json:"BuildID,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildArtifact) Reset()         { *m = BuildArtifact{} }
func (m *BuildArtifact) String() string { return proto.CompactTextString(m) }
func (*BuildArtifact) ProtoMessage()    {}
func (*BuildArtifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_CI_277d7614fec0f21c, []int{1}
}
func (m *BuildArtifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildArtifact.Unmarshal(m, b)
}
func (m *BuildArtifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildArtifact.Marshal(b, m, deterministic)
}
func (dst *BuildArtifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildArtifact.Merge(dst, src)
}
func (m *BuildArtifact) XXX_Size() int {
	return xxx_messageInfo_BuildArtifact.Size(m)
}
func (m *BuildArtifact) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildArtifact.DiscardUnknown(m)
}

var xxx_messageInfo_BuildArtifact proto.InternalMessageInfo

func (m *BuildArtifact) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *BuildArtifact) GetBuildID() int64 {
	if m != nil {
		return m.BuildID
	}
	return 0
}

func (m *BuildArtifact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Build)(nil), "types.Build")
	proto.RegisterType((*BuildArtifact)(nil), "types.BuildArtifact")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CIAPIClient is the client API for CIAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CIAPIClient interface {
	GetBuild(ctx context.Context, in *Build, opts ...grpc.CallOption) (*Build, error)
	GetBuildArtifact(ctx context.Context, in *BuildArtifact, opts ...grpc.CallOption) (*BuildArtifact, error)
}

type cIAPIClient struct {
	cc *grpc.ClientConn
}

func NewCIAPIClient(cc *grpc.ClientConn) CIAPIClient {
	return &cIAPIClient{cc}
}

func (c *cIAPIClient) GetBuild(ctx context.Context, in *Build, opts ...grpc.CallOption) (*Build, error) {
	out := new(Build)
	err := c.cc.Invoke(ctx, "/types.CIAPI/GetBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cIAPIClient) GetBuildArtifact(ctx context.Context, in *BuildArtifact, opts ...grpc.CallOption) (*BuildArtifact, error) {
	out := new(BuildArtifact)
	err := c.cc.Invoke(ctx, "/types.CIAPI/GetBuildArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CIAPIServer is the server API for CIAPI service.
type CIAPIServer interface {
	GetBuild(context.Context, *Build) (*Build, error)
	GetBuildArtifact(context.Context, *BuildArtifact) (*BuildArtifact, error)
}

func RegisterCIAPIServer(s *grpc.Server, srv CIAPIServer) {
	s.RegisterService(&_CIAPI_serviceDesc, srv)
}

func _CIAPI_GetBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Build)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CIAPIServer).GetBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.CIAPI/GetBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CIAPIServer).GetBuild(ctx, req.(*Build))
	}
	return interceptor(ctx, in, info, handler)
}

func _CIAPI_GetBuildArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildArtifact)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CIAPIServer).GetBuildArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.CIAPI/GetBuildArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CIAPIServer).GetBuildArtifact(ctx, req.(*BuildArtifact))
	}
	return interceptor(ctx, in, info, handler)
}

var _CIAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.CIAPI",
	HandlerType: (*CIAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBuild",
			Handler:    _CIAPI_GetBuild_Handler,
		},
		{
			MethodName: "GetBuildArtifact",
			Handler:    _CIAPI_GetBuildArtifact_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "CI.proto",
}

func init() { proto.RegisterFile("CI.proto", fileDescriptor_CI_277d7614fec0f21c) }

var fileDescriptor_CI_277d7614fec0f21c = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4e, 0x83, 0x30,
	0x1c, 0xc6, 0x57, 0x06, 0xc8, 0xfe, 0x6e, 0xc6, 0x34, 0xc6, 0x34, 0x5c, 0x24, 0xc4, 0x03, 0xa7,
	0x2e, 0x99, 0x2f, 0xe0, 0x36, 0x92, 0xa5, 0x07, 0x8d, 0xe9, 0x7c, 0x01, 0x60, 0x65, 0x23, 0x01,
	0x4b, 0x68, 0x7b, 0xf0, 0xf1, 0x7c, 0x33, 0x63, 0x91, 0x45, 0xe2, 0x6e, 0xfd, 0x7e, 0xfd, 0x0e,
	0xbf, 0xff, 0x07, 0xc1, 0x96, 0xd1, 0xb6, 0x93, 0x5a, 0x62, 0x4f, 0x7f, 0xb6, 0x42, 0x85, 0x0f,
	0x47, 0x29, 0x8f, 0xb5, 0x58, 0x5a, 0x98, 0x9b, 0x72, 0xa9, 0xab, 0x46, 0x28, 0x9d, 0x35, 0x6d,
	0xdf, 0x8b, 0xbf, 0x10, 0x78, 0x1b, 0x53, 0xd5, 0x07, 0x7c, 0x03, 0x0e, 0x4b, 0x09, 0x8a, 0x50,
	0x32, 0xe5, 0x0e, 0x4b, 0x71, 0x0c, 0xf3, 0x5d, 0xa5, 0x4f, 0x26, 0xe7, 0xa2, 0x95, 0x2c, 0x25,
	0x8e, 0xfd, 0x19, 0x31, 0xfc, 0x08, 0x0b, 0xa6, 0xf6, 0xa6, 0x28, 0x84, 0x52, 0xa5, 0xa9, 0x6b,
	0x32, 0x8d, 0x50, 0x12, 0xf0, 0x31, 0xc4, 0x14, 0xdc, 0x34, 0xd3, 0x82, 0xb8, 0x11, 0x4a, 0xae,
	0x57, 0x21, 0xed, 0x9d, 0xe8, 0xe0, 0x44, 0xdf, 0x07, 0x27, 0x6e, 0x7b, 0xf8, 0x1e, 0xfc, 0x4d,
	0x97, 0x7d, 0x14, 0x27, 0xe2, 0x45, 0x28, 0x99, 0xf1, 0xdf, 0xf4, 0xc3, 0xf7, 0xfa, 0x20, 0x8d,
	0x26, 0x7e, 0xcf, 0xfb, 0x14, 0xbf, 0xc0, 0xc2, 0x9e, 0xb0, 0xee, 0x74, 0x55, 0x66, 0x85, 0xfe,
	0x77, 0x0a, 0x81, 0x2b, 0x5b, 0x38, 0x5f, 0x31, 0x44, 0x8c, 0xc1, 0x7d, 0xcd, 0x1a, 0x61, 0xbd,
	0x67, 0xdc, 0xbe, 0x57, 0x0a, 0xbc, 0x2d, 0x5b, 0xbf, 0x31, 0x9c, 0x40, 0xb0, 0x13, 0xba, 0x5f,
	0x67, 0x4e, 0xed, 0xa0, 0xd4, 0xa6, 0x70, 0x94, 0xe2, 0x09, 0x7e, 0x86, 0xdb, 0xa1, 0x79, 0x96,
	0xb8, 0xfb, 0xdb, 0x19, 0x68, 0x78, 0x91, 0xc6, 0x93, 0xdc, 0xb7, 0x6b, 0x3c, 0x7d, 0x07, 0x00,
	0x00, 0xff, 0xff, 0xd6, 0xc5, 0x97, 0x7e, 0xc2, 0x01, 0x00, 0x00,
}
